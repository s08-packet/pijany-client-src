/*
 * Decompiled with CFR 0.152.
 * 
 * Could not load the following classes:
 *  javafx.util.Pair
 */
package drunkclient.beta.IMPL.Module.impl.exploit;

import drunkclient.beta.API.EventHandler;
import drunkclient.beta.API.events.world.EventPreUpdate;
import drunkclient.beta.IMPL.Module.Module;
import drunkclient.beta.IMPL.Module.Type;
import drunkclient.beta.UTILS.helper.Helper;
import drunkclient.beta.UTILS.world.MovementUtil;
import drunkclient.beta.UTILS.world.Timer;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import javafx.util.Pair;
import net.minecraft.block.Block;
import net.minecraft.block.BlockAir;
import net.minecraft.block.BlockLiquid;
import net.minecraft.client.Minecraft;
import net.minecraft.client.entity.EntityOtherPlayerMP;
import net.minecraft.client.entity.EntityPlayerSP;
import net.minecraft.entity.Entity;
import net.minecraft.entity.player.EntityPlayer;
import net.minecraft.util.BlockPos;
import net.minecraft.util.EnumChatFormatting;
import net.minecraft.util.MathHelper;

public class HackerDetector
extends Module {
    private final List<Pair<EntityPlayer, String>> data = new ArrayList<Pair<EntityPlayer, String>>();
    public static final ArrayList<EntityPlayer> hackers = new ArrayList();
    private final ArrayList<String> hacker = new ArrayList();
    Timer time = new Timer();
    double motionvlY;
    double speedvl;
    double NoKBvl;
    double auravl;
    double noslowvl;
    public static boolean enabled = false;

    public HackerDetector() {
        super("Detector", new String[0], Type.EXPLOIT, "Hacker Detector");
    }

    @EventHandler
    public void onUpdate(EventPreUpdate e) {
        if (Minecraft.thePlayer.ticksExisted <= 105) {
            hackers.clear();
            return;
        }
        if (HackerDetector.mc.theWorld == null) {
            return;
        }
        Iterator<Entity> iterator = HackerDetector.mc.theWorld.getLoadedEntityList().iterator();
        while (iterator.hasNext()) {
            Entity entity = iterator.next();
            if (!(entity instanceof EntityPlayer)) continue;
            EntityOtherPlayerMP player = null;
            if (entity instanceof EntityPlayerSP || !(this.getSpeed(player = (EntityOtherPlayerMP)entity) > MovementUtil.getBaseMoveSpeed() + 0.85) || player.onGround || this.isInLiquid(player)) continue;
            Helper.sendMessage((Object)((Object)EnumChatFormatting.BLUE) + player.getName() + " Speed (A)");
        }
    }

    @Override
    public void onDisable() {
        super.onDisable();
        hackers.clear();
        enabled = false;
    }

    private boolean isInLiquid(Entity e) {
        int x = MathHelper.floor_double(e.getEntityBoundingBox().minY);
        while (x < MathHelper.floor_double(e.getEntityBoundingBox().maxX) + 1) {
            for (int z = MathHelper.floor_double(e.getEntityBoundingBox().minZ); z < MathHelper.floor_double(e.getEntityBoundingBox().maxZ) + 1; ++z) {
                BlockPos pos = new BlockPos(x, (int)e.getEntityBoundingBox().minY, z);
                Block block = Minecraft.getMinecraft().theWorld.getBlockState(pos).getBlock();
                if (block == null || block instanceof BlockAir) continue;
                return block instanceof BlockLiquid;
            }
            ++x;
        }
        return false;
    }

    private double getSpeed(EntityPlayer player) {
        return Math.sqrt(player.motionX * player.motionX + player.motionZ * player.motionZ);
    }
}

