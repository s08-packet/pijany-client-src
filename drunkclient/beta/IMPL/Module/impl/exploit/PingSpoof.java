/*
 * Decompiled with CFR 0.152.
 */
package drunkclient.beta.IMPL.Module.impl.exploit;

import drunkclient.beta.API.EventHandler;
import drunkclient.beta.API.events.world.EventPacketReceive;
import drunkclient.beta.API.events.world.EventPacketSend;
import drunkclient.beta.API.events.world.EventPreUpdate;
import drunkclient.beta.IMPL.Module.Module;
import drunkclient.beta.IMPL.Module.Type;
import drunkclient.beta.UTILS.helper.Helper;
import drunkclient.beta.UTILS.world.PacketUtil;
import drunkclient.beta.UTILS.world.Timer;
import java.util.ArrayList;
import java.util.List;
import net.minecraft.client.Minecraft;
import net.minecraft.network.Packet;
import net.minecraft.network.play.client.C00PacketKeepAlive;
import net.minecraft.network.play.client.C0FPacketConfirmTransaction;

public class PingSpoof
extends Module {
    private final List<Packet<?>> packets;
    private Packet sendPacket;
    private Timer timer = new Timer();
    public drunkclient.beta.IMPL.set.Mode<Enum> modes = new drunkclient.beta.IMPL.set.Mode("Mode", "Mode", (Enum[])Mode.values(), (Enum)Mode.Transaction);

    public PingSpoof() {
        super("PingSpoof", new String[0], Type.EXPLOIT, "No");
        this.addValues(this.modes);
        this.packets = new ArrayList();
    }

    @EventHandler
    public void onReceive(EventPacketReceive e) {
        switch (this.modes.getModeAsString()) {
            case "Transaction": {
                if (e.getPacket() instanceof C00PacketKeepAlive) {
                    this.packets.add(e.getPacket());
                    e.setCancelled(true);
                    return;
                }
                if (!(e.getPacket() instanceof C0FPacketConfirmTransaction)) return;
                if (((C0FPacketConfirmTransaction)e.getPacket()).getUid() >= 0) return;
                this.packets.add(e.getPacket());
                e.setCancelled(true);
                return;
            }
        }
    }

    @EventHandler
    public void onSend(EventPacketSend e) {
        switch (this.modes.getModeAsString()) {
            case "Verus": {
                if (this.sendPacket != null && e.getPacket() instanceof C00PacketKeepAlive && e.getPacket() == this.sendPacket) {
                    this.sendPacket = null;
                    return;
                }
                if (!(e.getPacket() instanceof C00PacketKeepAlive)) return;
                this.packets.add(e.getPacket());
                e.setCancelled(true);
                return;
            }
        }
    }

    @EventHandler
    public void e(EventPreUpdate e) {
        this.setSuffix(this.modes.getModeAsString());
        switch (this.modes.getModeAsString()) {
            case "Verus": {
                if (!this.timer.hasElapsed(1000L, true)) return;
                if (this.packets.size() < 1) return;
                this.sendPacket = this.packets.get(0);
                PacketUtil.sendPacket(this.packets.get(0));
                this.packets.remove(0);
                return;
            }
            case "Transaction": {
                if (Minecraft.thePlayer.ticksExisted < 5 && this.packets.size() > 0) {
                    this.packets.clear();
                }
                if (!this.timer.hasElapsed((long)(Math.random() * 40.0), true)) return;
                while (this.packets.size() > 0) {
                    PacketUtil.sendPacketNoEvent(this.packets.remove(0));
                    Helper.sendMessage("Spoof");
                }
                this.timer.reset();
                return;
            }
        }
    }

    static enum Mode {
        Transaction,
        Verus;

    }
}

